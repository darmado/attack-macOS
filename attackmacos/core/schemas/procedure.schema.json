{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://attack-macos.com/schemas/procedure.schema.json",
  "title": "Attack-macOS Procedure Definition",
  "description": "Schema for YAML procedure definitions used to generate executable shell scripts for macOS ATT&CK techniques",
  "type": "object",
  "required": [
    "procedure_name",
    "ttp_id",
    "tactic",
    "guid",
    "intent",
    "author",
    "version",
    "created",
    "procedure"
  ],
  "properties": {
    "procedure_name": {
      "type": "string",
      "pattern": "^[0-9]{4}_[a-zA-Z0-9_]+$",
      "description": "Unique procedure name following MITRE ATT&CK format (e.g., 1217_browser_history)",
      "examples": ["1217_browser_history", "1082_system_info"]
    },
    "ttp_id": {
      "type": "string", 
      "pattern": "^T[0-9]{4}(\\.[0-9]{3})?$",
      "description": "MITRE ATT&CK technique ID (e.g., T1518 for main technique, T1518.001 for sub-technique)",
      "examples": ["T1518", "T1082", "T1217", "T1518.001"]
    },
    "tactic": {
      "type": "string",
      "enum": [
        "Reconnaissance",
        "Resource Development", 
        "Initial Access",
        "Execution",
        "Persistence",
        "Privilege Escalation",
        "Defense Evasion",
        "Credential Access",
        "Discovery",
        "Lateral Movement",
        "Collection",
        "Command and Control",
        "Exfiltration",
        "Impact"
      ],
      "description": "MITRE ATT&CK tactic category"
    },
    "guid": {
      "type": "string",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "description": "Unique identifier for this procedure (UUID4 format)",
      "examples": ["123e4567-e89b-12d3-a456-426614174000"]
    },
    "intent": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Brief description of what this procedure accomplishes",
      "examples": ["Extract browser history from Safari, Chrome, Firefox, and Brave on macOS."]
    },
    "author": {
      "type": "string",
      "description": "Author information with optional contact details",
      "examples": ["@darmado | https://x.com/darmad0", "John Doe <john@example.com>"]
    },
    "version": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
      "description": "Semantic version number (major.minor.patch)",
      "examples": ["1.0.0", "2.1.3"]
    },
    "created": {
      "type": "string",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
      "description": "Creation date in YYYY-MM-DD format",
      "examples": ["2025-05-27"]
    },
    "updated": {
      "type": "string",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
      "description": "Last update date in YYYY-MM-DD format",
      "examples": ["2025-05-27"]
    },
    "detection": {
      "type": "array",
      "description": "Detection indicators and analysis resources",
      "items": {
        "type": "object",
        "properties": {
          "ioc": {
            "type": "string",
            "description": "Indicator of compromise"
          },
          "analysis": {
            "type": "string",
            "format": "uri",
            "description": "Link to analysis or writeup"
          },
          "rule_sigma": {
            "type": "string", 
            "format": "uri",
            "description": "Link to Sigma detection rule"
          },
          "rule_elastic": {
            "type": "string",
            "format": "uri", 
            "description": "Link to Elastic detection rule"
          },
          "rule_splunk": {
            "type": "string",
            "format": "uri",
            "description": "Link to Splunk detection rule"
          },
          "rule_block": {
            "type": "string",
            "format": "uri",
            "description": "Link to blocking/prevention rule"
          }
        }
      }
    },
    "resources": {
      "type": "array",
      "description": "Additional resources and references",
      "items": {
        "type": "object",
        "required": ["link"],
        "properties": {
          "link": {
            "type": "string",
            "format": "uri",
            "description": "URL to resource"
          },
          "description": {
            "type": "string",
            "description": "Optional description of the resource"
          }
        }
      }
    },
    "acknowledgement": {
      "type": "array",
      "description": "People to acknowledge for contributions",
      "items": {
        "type": "object",
        "required": ["person"],
        "properties": {
          "person": {
            "type": "string",
            "description": "Person's name"
          },
          "handle": {
            "type": "string",
            "description": "Social media handle or contact"
          }
        }
      }
    },
    "platform": {
      "type": "array",
      "description": "Target platforms",
      "items": {
        "type": "string",
        "enum": ["macOS", "iOS", "Linux"]
      },
      "minItems": 1
    },
    "procedure": {
      "type": "object",
      "required": ["arguments", "global_variable", "functions"],
      "description": "Core procedure definition",
      "properties": {
        "arguments": {
          "type": "array",
          "description": "Command-line arguments for the generated script",
          "items": {
            "type": "object",
            "required": ["option", "description"],
            "properties": {
              "option": {
                "type": "string",
                "pattern": "^((-[a-z]{1,2}\\|)?--[a-z]+(-[a-z]+)*|--[a-z]+(-[a-z]+)*)$",
                "description": "Command-line option: long format required (--word, --word-word), optionally with short format prefix (-s|--word, -ss|--word-word). Only lowercase letters allowed.",
                "examples": ["-s|--safari", "-b|--brave", "--edr-ps", "--search"]
              },
              "description": {
                "type": "string",
                "minLength": 5,
                "maxLength": 100,
                "description": "Help text description for this option"
              },
              "type": {
                "type": "string",
                "enum": ["string", "integer"],
                "description": "Data type for value arguments (omit for boolean flags)"
              },
              "option_required": {
                "type": "boolean",
                "default": false,
                "description": "Whether this option is required for script execution"
              },
              "input_required": {
                "type": "boolean", 
                "default": false,
                "description": "Whether input validation is required for this argument"
              },
              "input_values": {
                "type": "array",
                "description": "Array of valid input values for validation (e.g., ['all', 'ps', 'files', 'info'])",
                "items": {
                  "type": "string"
                }
              },
              "argument_required": {
                "type": "boolean",
                "default": false,
                "description": "Whether the argument itself is required"
              },
              "execute_function": {
                "type": "array",
                "description": "Functions to execute when this option is specified",
                "items": {
                  "type": "string",
                  "description": "Function name to execute"
                }
              }
            }
          }
        },
        "global_variable": {
          "type": "array",
          "description": "Global variables for the generated script",
          "items": {
            "type": "object",
            "required": ["name", "type", "default_value"],
            "properties": {
              "name": {
                "type": "string",
                "pattern": "^[A-Z][A-Z0-9_]*$",
                "description": "Variable name in UPPER_CASE format"
              },
              "type": {
                "type": "string",
                "enum": ["string", "integer", "boolean", "array"],
                "description": "Variable data type"
              },
              "default_value": {
                "description": "Default value for the variable (type depends on 'type' field)"
              },
              "array_elements": {
                "type": "array",
                "description": "Array elements (only used when type is 'array')",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "functions": {
          "type": "array",
          "description": "Shell functions that implement the technique",
          "items": {
            "type": "object",
            "required": ["name", "type", "code"],
            "properties": {
              "name": {
                "type": "string",
                "pattern": "^[a-z][a-z0-9_]*$",
                "description": "Function name in lowercase_underscore format"
              },
              "type": {
                "type": "string",
                "enum": ["main", "helper"],
                "default": "main",
                "description": "Function type: 'main' functions execute from arguments, 'helper' functions are called by other functions"
              },
              "execute_condition": {
                "type": "object",
                "description": "Conditions for function execution",
                "properties": {
                  "global_variable": {
                    "type": "string",
                    "description": "Global variable to check"
                  },
                  "exists": {
                    "type": "boolean",
                    "description": "Whether the variable should exist"
                  }
                }
              },
              "opsec": {
                "type": "object",
                "description": "Operational security checks",
                "properties": {
                  "check_fda": {
                    "type": "object",
                    "description": "Full Disk Access permission check",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "exit_on_failure": {
                        "type": "boolean",
                        "default": true
                      }
                    }
                  },
                  "check_permission": {
                    "type": "object",
                    "description": "File/directory permission check",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["file", "directory", "pid", "user", "group"]
                      },
                      "path": {
                        "type": "string",
                        "description": "Path to check (can include variables)"
                      },
                      "read": {
                        "type": "boolean",
                        "default": false
                      },
                      "write": {
                        "type": "boolean", 
                        "default": false
                      },
                      "execute": {
                        "type": "boolean",
                        "default": false
                      },
                      "exit_on_failure": {
                        "type": "boolean",
                        "default": true
                      }
                    }
                  },
                  "check_db_lock": {
                    "type": "object",
                    "description": "Database lock check",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "database_path": {
                        "type": "string",
                        "description": "Path to database file"
                      },
                      "exit_on_failure": {
                        "type": "boolean",
                        "default": true
                      },
                      "error_message": {
                        "type": "string",
                        "description": "Custom error message"
                      }
                    }
                  }
                }
              },
              "code": {
                "type": "string",
                "minLength": 10,
                "description": "Shell function code implementation"
              }
            }
          }
        }
      }
    }
  },
  "additionalProperties": false
} 